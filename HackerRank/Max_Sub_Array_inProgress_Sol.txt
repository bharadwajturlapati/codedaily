import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {
    
    

    // Complete the maxSubsetSum function below.
    static int maxSubsetSum(int[] arr) {
        Result res = new Result();
        
        for(int i =0 ;i< arr.length; i++){ 
            int index = i;
            // avoiding index out of bounds
            if(i+3 >= arr.length){
               index = i+3 - arr.length -2;
            }
            if(i+2 >= arr.length){
               index = i+2 - arr.length -2;
            }
            res.res = Math.max(res.res, arr[i]);
            res.res = Math.max(res.res, arr[i] + arr[index+2]);
            res.res = Math.max(res.res, arr[i] + arr[index+2] + arr[index+3]);
        }
        
        return res.res;
    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int n = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        int[] arr = new int[n];

        String[] arrItems = scanner.nextLine().split(" ");
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        for (int i = 0; i < n; i++) {
            int arrItem = Integer.parseInt(arrItems[i]);
            arr[i] = arrItem;
        }

        int res = maxSubsetSum(arr);

        bufferedWriter.write(String.valueOf(res));
        bufferedWriter.newLine();

        bufferedWriter.close();

        scanner.close();
    }
}

class Result{
    public int res = Integer.MIN_VALUE;
}
